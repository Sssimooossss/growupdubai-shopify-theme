{%- assign product_card_product = product_card_product | default: product -%}
{%- assign lazy_load = lazy_load | default: true -%}
{%- assign show_vendor = show_vendor | default: false -%}
{%- assign show_rating = show_rating | default: false -%}
{%- assign extend_height = extend_height | default: false -%}
{%- assign placeholder_image = placeholder_image | default: 'product-1' -%}

<div class="card-wrapper underline-links-hover">
  <div class="card card--{{ settings.card_style }} card--text 
              {% if extend_height %} card--extend-height{% endif %}
              {% if product_card_product.featured_media == nil %} card--text-only card--soft{% endif %}
              color-{{ settings.card_color_scheme }} gradient"
       style="--ratio-percent: {{ 1 | divided_by: ratio | times: 100 }}%;">
    
    <div class="card__inner {% if settings.card_style == 'standard' %}color-{{ settings.card_color_scheme }} gradient{% endif %} ratio"
         style="--ratio-percent: {{ 1 | divided_by: ratio | times: 100 }}%;">
      
      {%- if product_card_product.featured_media -%}
        <div class="card__media">
          <div class="media media--transparent media--hover-effect">
            {% comment %}theme-check-disable ImgLazyLoading{% endcomment %}
            <img
              srcset="
                {%- if product_card_product.featured_media.width >= 165 -%}{{ product_card_product.featured_media | img_url: '165x' }} 165w,{%- endif -%}
                {%- if product_card_product.featured_media.width >= 360 -%}{{ product_card_product.featured_media | img_url: '360x' }} 360w,{%- endif -%}
                {%- if product_card_product.featured_media.width >= 533 -%}{{ product_card_product.featured_media | img_url: '533x' }} 533w,{%- endif -%}
                {%- if product_card_product.featured_media.width >= 720 -%}{{ product_card_product.featured_media | img_url: '720x' }} 720w,{%- endif -%}
                {%- if product_card_product.featured_media.width >= 940 -%}{{ product_card_product.featured_media | img_url: '940x' }} 940w,{%- endif -%}
                {%- if product_card_product.featured_media.width >= 1066 -%}{{ product_card_product.featured_media | img_url: '1066x' }} 1066w,{%- endif -%}
                {{ product_card_product.featured_media | img_url }} {{ product_card_product.featured_media.width }}w
              "
              src="{{ product_card_product.featured_media | img_url: '533x' }}"
              sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 130 | divided_by: 4 }}px, (min-width: 990px) calc((100vw - 130px) / 4), (min-width: 750px) calc((100vw - 120px) / 3), calc((100vw - 35px) / 2)"
              alt="{{ product_card_product.featured_media.alt | escape }}"
              class="motion-reduce product-card-image"
              {% unless lazy_load == false %}loading="lazy"{% endunless %}
              width="{{ product_card_product.featured_media.width }}"
              height="{{ product_card_product.featured_media.height }}"
            >
            {% comment %}theme-check-enable ImgLazyLoading{% endcomment %}

            {%- if product_card_product.media[1] != nil and show_secondary_image -%}
              <img
                srcset="
                  {%- if product_card_product.media[1].width >= 165 -%}{{ product_card_product.media[1] | img_url: '165x' }} 165w,{%- endif -%}
                  {%- if product_card_product.media[1].width >= 360 -%}{{ product_card_product.media[1] | img_url: '360x' }} 360w,{%- endif -%}
                  {%- if product_card_product.media[1].width >= 533 -%}{{ product_card_product.media[1] | img_url: '533x' }} 533w,{%- endif -%}
                  {%- if product_card_product.media[1].width >= 720 -%}{{ product_card_product.media[1] | img_url: '720x' }} 720w,{%- endif -%}
                  {%- if product_card_product.media[1].width >= 940 -%}{{ product_card_product.media[1] | img_url: '940x' }} 940w,{%- endif -%}
                  {%- if product_card_product.media[1].width >= 1066 -%}{{ product_card_product.media[1] | img_url: '1066x' }} 1066w,{%- endif -%}
                  {{ product_card_product.media[1] | img_url }} {{ product_card_product.media[1].width }}w
                "
                src="{{ product_card_product.media[1] | img_url: '533x' }}"
                sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 130 | divided_by: 4 }}px, (min-width: 990px) calc((100vw - 130px) / 4), (min-width: 750px) calc((100vw - 120px) / 3), calc((100vw - 35px) / 2)"
                alt=""
                class="motion-reduce product-card-image product-card-image--secondary"
                loading="lazy"
                width="{{ product_card_product.media[1].width }}"
                height="{{ product_card_product.media[1].height }}"
              >
            {%- endif -%}
          </div>
        </div>
      {%- endif -%}
      
      <!-- Product Badges -->
      <div class="card__badges">
        {% if product_card_product.tags contains 'popular' %}
          <span class="badge badge--popular">üî• Popular</span>
        {% endif %}
        {% if product_card_product.tags contains 'arab-users' %}
          <span class="badge badge--arab">üá¶üá™ Arab Users</span>
        {% endif %}
        {% if product_card_product.tags contains 'instant-delivery' %}
          <span class="badge badge--instant">‚ö° Instant</span>
        {% endif %}
        {% if product_card_product.compare_at_price > product_card_product.price %}
          <span class="badge badge--sale">
            -{{ product_card_product.compare_at_price | minus: product_card_product.price | times: 100.0 | divided_by: product_card_product.compare_at_price | round }}%
          </span>
        {% endif %}
      </div>
    </div>
    
    <div class="card__content">
      <div class="card__information">
        <h3 class="card__heading">
          <a href="{{ product_card_product.url }}" id="StandardCardNoMediaLink-{{ section.id }}-{{ product_card_product.id }}" class="full-unstyled-link" aria-labelledby="StandardCardNoMediaLink-{{ section.id }}-{{ product_card_product.id }} NoMediaStandardBadge-{{ section.id }}-{{ product_card_product.id }}">
            {{ product_card_product.title | escape }}
          </a>
        </h3>
        
        <!-- Platform Icon -->
        <div class="card__platform">
          {% if product_card_product.type contains 'Instagram' or product_card_product.tags contains 'platform-instagram' %}
            <span class="platform-tag instagram">
              {% render 'icon-instagram' %}
              Instagram
            </span>
          {% elsif product_card_product.type contains 'TikTok' or product_card_product.tags contains 'platform-tiktok' %}
            <span class="platform-tag tiktok">
              {% render 'icon-tiktok' %}
              TikTok
            </span>
          {% elsif product_card_product.type contains 'YouTube' or product_card_product.tags contains 'platform-youtube' %}
            <span class="platform-tag youtube">
              {% render 'icon-youtube' %}
              YouTube
            </span>
          {% endif %}
        </div>
        
        <!-- Service Features -->
        <div class="card__features">
          <div class="feature-item">
            <span class="feature-icon">‚ö°</span>
            <span class="feature-text">{{ settings.default_delivery_time | default: "24-48h delivery" }}</span>
          </div>
          <div class="feature-item">
            <span class="feature-icon">üõ°Ô∏è</span>
            <span class="feature-text">100% Safe</span>
          </div>
          <div class="feature-item">
            <span class="feature-icon">üá¶üá™</span>
            <span class="feature-text">Arab Optimized</span>
          </div>
        </div>
      </div>
      
      <!-- Price -->
      <div class="card__pricing">
        {% render 'price', product: product_card_product, price_class: 'price--on-sale' %}
        
        {% if product_card_product.unit_price_measurement %}
          <div class="unit-price caption">
            <span class="visually-hidden">{{ 'products.product.price.unit_price' | t }}</span>
            {{ product_card_product.selected_or_first_available_variant.unit_price | money }}
            <span aria-hidden="true">/</span>
            <span class="visually-hidden">&nbsp;{{ 'accessibility.unit_price_separator' | t }}&nbsp;</span>
            {%- if product_card_product.selected_or_first_available_variant.unit_price_measurement.reference_value != 1 -%}
              {{- product_card_product.selected_or_first_available_variant.unit_price_measurement.reference_value -}}
            {%- endif -%}
            {{ product_card_product.selected_or_first_available_variant.unit_price_measurement.reference_unit }}
          </div>
        {% endif %}
      </div>
      
      <!-- Add to Cart Button -->
      <div class="card__actions">
        {% if product_card_product.available %}
          <form action="{{ routes.cart_add_url }}" method="post" enctype="multipart/form-data" class="product-card-form">
            <input type="hidden" name="id" value="{{ product_card_product.selected_or_first_available_variant.id }}">
            <button type="submit" name="add" class="btn btn-primary btn-add-to-cart">
              <span class="btn-text">{{ 'products.product.add_to_cart' | t }}</span>
              <span class="btn-icon">
                {% render 'icon-cart' %}
              </span>
            </button>
          </form>
        {% else %}
          <button type="button" class="btn btn-secondary btn-sold-out" disabled>
            {{ 'products.product.sold_out' | t }}
          </button>
        {% endif %}
      </div>
      
      <!-- Trust Indicators -->
      <div class="card__trust">
        <div class="trust-indicators">
          <span class="trust-item">
            <span class="trust-icon">‚≠ê</span>
            <span class="trust-text">4.9/5 Rating</span>
          </span>
          <span class="trust-item">
            <span class="trust-icon">üë•</span>
            <span class="trust-text">{{ 1000 | plus: product_card_product.id | modulo: 5000 }}+ Orders</span>
          </span>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
.card-wrapper {
  color: inherit;
  height: 100%;
  position: relative;
  text-decoration: none;
}

.card {
  text-align: left;
  text-decoration: none;
  background: white;
  border-radius: 1rem;
  box-shadow: 0 4px 20px rgba(0,0,0,0.1);
  overflow: hidden;
  transition: all 0.3s ease;
  height: 100%;
  display: flex;
  flex-direction: column;
}

.card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 30px rgba(0,0,0,0.15);
}

.card__inner {
  position: relative;
  overflow: hidden;
}

.card__media {
  position: relative;
  overflow: hidden;
  border-radius: 1rem 1rem 0 0;
}

.media {
  display: block;
  position: relative;
}

.product-card-image {
  width: 100%;
  height: 250px;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.card:hover .product-card-image {
  transform: scale(1.05);
}

.product-card-image--secondary {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.card:hover .product-card-image--secondary {
  opacity: 1;
}

.card__badges {
  position: absolute;
  top: 1rem;
  left: 1rem;
  z-index: 10;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.badge {
  padding: 0.25rem 0.75rem;
  border-radius: 1rem;
  font-size: 0.8rem;
  font-weight: 600;
  line-height: 1;
}

.badge--popular {
  background: linear-gradient(135deg, #FF6B6B, #FF8E53);
  color: white;
}

.badge--arab {
  background: linear-gradient(135deg, #2ECC71, #27AE60);
  color: white;
}

.badge--instant {
  background: linear-gradient(135deg, #FFD93D, #FF6B6B);
  color: white;
}

.badge--sale {
  background: linear-gradient(135deg, #E74C3C, #C0392B);
  color: white;
}

.card__content {
  padding: 1.5rem;
  flex: 1;
  display: flex;
  flex-direction: column;
}

.card__information {
  margin-bottom: 1rem;
}

.card__heading {
  margin: 0 0 1rem 0;
}

.card__heading a {
  color: var(--color-text);
  text-decoration: none;
  font-size: 1.1rem;
  font-weight: 600;
  line-height: 1.3;
}

.card__heading a:hover {
  color: var(--color-primary);
}

.card__platform {
  margin-bottom: 1rem;
}

.platform-tag {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  border-radius: 1.5rem;
  font-size: 0.9rem;
  font-weight: 600;
}

.platform-tag.instagram {
  background: linear-gradient(135deg, #E4405F, #C13584);
  color: white;
}

.platform-tag.tiktok {
  background: linear-gradient(135deg, #000000, #25f4ee);
  color: white;
}

.platform-tag.youtube {
  background: linear-gradient(135deg, #FF0000, #CC0000);
  color: white;
}

.platform-tag svg {
  width: 16px;
  height: 16px;
}

.card__features {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

.feature-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.85rem;
  color: #666;
}

.feature-icon {
  font-size: 1rem;
}

.card__pricing {
  margin-bottom: 1rem;
}

.price {
  font-size: 1.3rem;
  font-weight: bold;
  color: var(--color-primary);
}

.price--on-sale .price__sale {
  color: var(--color-accent);
}

.price--on-sale .price__regular {
  color: #999;
  text-decoration: line-through;
  margin-left: 0.5rem;
  font-size: 1rem;
}

.unit-price {
  font-size: 0.8rem;
  color: #666;
  margin-top: 0.25rem;
}

.card__actions {
  margin-bottom: 1rem;
}

.product-card-form {
  width: 100%;
}

.btn-add-to-cart {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  padding: 0.75rem 1.5rem;
  background: linear-gradient(135deg, var(--color-primary), var(--color-secondary));
  color: white;
  border: none;
  border-radius: 0.5rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
}

.btn-add-to-cart:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 15px rgba(46, 204, 113, 0.3);
}

.btn-sold-out {
  width: 100%;
  padding: 0.75rem 1.5rem;
  background: #ccc;
  color: #666;
  border: none;
  border-radius: 0.5rem;
  font-weight: 600;
  cursor: not-allowed;
}

.btn-icon svg {
  width: 16px;
  height: 16px;
}

.card__trust {
  margin-top: auto;
}

.trust-indicators {
  display: flex;
  justify-content: space-between;
  gap: 1rem;
}

.trust-item {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  font-size: 0.8rem;
  color: #666;
}

.trust-icon {
  font-size: 0.9rem;
}

/* Card styles variants */
.card--standard {
  background: var(--color-background);
}

.card--text-only {
  background: #f8f9fa;
}

.card--soft {
  box-shadow: 0 2px 10px rgba(0,0,0,0.05);
}

.card--extend-height {
  height: 100%;
}

/* Media queries */
@media (max-width: 768px) {
  .card__content {
    padding: 1rem;
  }
  
  .card__heading a {
    font-size: 1rem;
  }
  
  .card__features {
    gap: 0.25rem;
  }
  
  .feature-item {
    font-size: 0.8rem;
  }
  
  .trust-indicators {
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .product-card-image {
    height: 200px;
  }
}

/* Loading animation */
@keyframes shimmer {
  0% { background-position: -200px 0; }
  100% { background-position: calc(200px + 100%) 0; }
}

.card.loading {
  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
  background-size: 200px 100%;
  animation: shimmer 1.5s infinite;
}
</style>

<script>
// Add to cart functionality for product cards
document.addEventListener('DOMContentLoaded', function() {
  const productForms = document.querySelectorAll('.product-card-form');
  
  productForms.forEach(form => {
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      
      const formData = new FormData(this);
      const button = this.querySelector('.btn-add-to-cart');
      const originalText = button.querySelector('.btn-text').textContent;
      
      // Show loading state
      button.disabled = true;
      button.querySelector('.btn-text').textContent = 'Adding...';
      
      fetch('/cart/add.js', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        // Success
        button.querySelector('.btn-text').textContent = 'Added!';
        button.style.background = 'linear-gradient(135deg, #27AE60, #2ECC71)';
        
        // Update cart count
        fetch('/cart.js')
          .then(response => response.json())
          .then(cart => {
            document.dispatchEvent(new CustomEvent('cart:updated', {
              detail: { cart: cart }
            }));
          });
        
        // Reset button after 2 seconds
        setTimeout(() => {
          button.disabled = false;
          button.querySelector('.btn-text').textContent = originalText;
          button.style.background = '';
        }, 2000);
      })
      .catch(error => {
        // Error
        console.error('Error adding to cart:', error);
        button.disabled = false;
        button.querySelector('.btn-text').textContent = 'Error - Try Again';
        button.style.background = 'linear-gradient(135deg, #E74C3C, #C0392B)';
        
        // Reset button after 3 seconds
        setTimeout(() => {
          button.querySelector('.btn-text').textContent = originalText;
          button.style.background = '';
        }, 3000);
      });
    });
  });
});
</script>